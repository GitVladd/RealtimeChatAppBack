// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealtimeChatApp.Data;

#nullable disable

namespace RealtimeChatApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241225184515_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealtimeChatApp.Models.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SentimentAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("RealtimeChatApp.Models.SentimentAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AnalyzedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChatMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ConfidenceScoresNegative")
                        .HasColumnType("float");

                    b.Property<double>("ConfidenceScoresNeutral")
                        .HasColumnType("float");

                    b.Property<double>("ConfidenceScoresPositive")
                        .HasColumnType("float");

                    b.Property<string>("Sentiment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatMessageId")
                        .IsUnique();

                    b.ToTable("SentimentAnalysis");
                });

            modelBuilder.Entity("RealtimeChatApp.Models.SentimentAnalysis", b =>
                {
                    b.HasOne("RealtimeChatApp.Models.ChatMessage", "ChatMessage")
                        .WithOne("SentimentAnalysis")
                        .HasForeignKey("RealtimeChatApp.Models.SentimentAnalysis", "ChatMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatMessage");
                });

            modelBuilder.Entity("RealtimeChatApp.Models.ChatMessage", b =>
                {
                    b.Navigation("SentimentAnalysis")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
